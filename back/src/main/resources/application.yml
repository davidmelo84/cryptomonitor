# ============================================
# CONFIGURAÇÕES GERAIS DO SERVIDOR
# ============================================
server:
  port: ${PORT:8080}
  servlet:
    context-path: /crypto-monitor

  compression:
    enabled: true
    mime-types:
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
      - text/css
      - text/javascript
      - application/javascript
    min-response-size: 1024

# ============================================
# CONFIGURAÇÃO SPRING / BANCO DE DADOS
# ============================================
spring:
  application:
    name: crypto-monitor

  datasource:
    url: ${SPRING_DATASOURCE_URL:${DATABASE_URL:jdbc:postgresql://localhost:5432/crypto_monitor}}
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME:${PGUSER:crypto_user}}
    password: ${SPRING_DATASOURCE_PASSWORD:${PGPASSWORD:qwe123}}

    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: CryptoMonitorPool

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: false

  database-platform: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    locations: classpath:db/migration
    url: ${SPRING_DATASOURCE_URL:${DATABASE_URL:jdbc:postgresql://localhost:5432/crypto_monitor}}
    user: ${SPRING_DATASOURCE_USERNAME:${PGUSER:crypto_user}}
    password: ${SPRING_DATASOURCE_PASSWORD:${PGPASSWORD:qwe123}}
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false

  jwt:
    secret: ${JWT_SECRET}
    expiration: 86400000
    issuer: crypto-monitor

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:ddevnordeste@gmail.com}
    password: ${MAIL_PASSWORD:zubnnuqrgxjwuhth}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  task:
    scheduling:
      enabled: false

  main:
    banner-mode: off

  mvc:
    throw-exception-if-no-handler-found: true

  web:
    resources:
      add-mappings: false

# ============================================
# CONFIGURAÇÕES ESPECÍFICAS DA APLICAÇÃO
# ============================================
crypto:
  coins: bitcoin,ethereum,cardano,polkadot,chainlink,solana,avalanche-2,polygon,litecoin,bitcoin-cash

alert:
  buy:
    threshold: -1.0
  sell:
    threshold: 1.0
  check-interval: 300000

notification:
  email:
    enabled: true
    from-name: Crypto Monitoring System
    from: ${MAIL_USERNAME:ddevnordeste@gmail.com}
    cooldown-minutes: 30

  telegram:
    enabled: true
    bot-token: ${TELEGRAM_BOT_TOKEN:}
    chat-id: ${TELEGRAM_CHAT_ID:}

monitoring:
  max-concurrent-users: 50
  thread-pool-size: 10
  shutdown-timeout: 60

coingecko:
  api:
    url: https://api.coingecko.com/api/v3
  rate-limit: 30

# ============================================
# LOGGING
# ============================================
logging:
  level:
    com.crypto: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: ERROR
    org.springframework.web: DEBUG
    org.springframework.mail: DEBUG
    org.flywaydb: DEBUG
    org.springframework.scheduling: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/crypto-monitor.log
    max-size: 10MB
    max-history: 7

# ============================================
# ACTUATOR
# ============================================
management:
  endpoints:
    web:
      exposure:
        include: health
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    mail:
      enabled: false
  info:
    env:
      enabled: true

# ============================================
# INFORMAÇÕES DA APLICAÇÃO
# ============================================
info:
  app:
    name: Crypto Monitor
    description: Sistema de Monitoramento de Criptomoedas com Controle por Usuário
    version: 2.0.0
    features:
      - Monitoramento controlado por usuário
      - Alertas personalizados por email
      - Sistema anti-spam de notificações
      - Suporte multi-usuário
  java:
    version: "17.0.16"
  build:
    timestamp: ${TIMESTAMP:2025-10-31T00:00:00Z}

# ============================================
# CONFIGURAÇÃO DE SEGURANÇA / CORS
# ============================================
app:
  cors:
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:https://cryptomonitor-theta.vercel.app/}
  security:
    enabled: true

# ============================================
# JWT (espelhado para compatibilidade)
# ============================================
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000
  issuer: crypto-monitor