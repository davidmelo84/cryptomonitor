# ============================================
# CONFIGURAÇÕES GERAIS DO SERVIDOR
# ============================================
server:
  port: 8080
  servlet:
    context-path: /crypto-monitor

  # ============================================
  # COMPRESSÃO HTTP
  # ============================================
  compression:
    enabled: true
    mime-types:
      - application/json
      - application/xml
      - text/html
      - text/xml
      - text/plain
      - text/css
      - text/javascript
      - application/javascript
    min-response-size: 1024 # Comprime responses > 1KB

spring:
  application:
    name: crypto-monitor

  # ============================================
  # CONFIGURAÇÃO DO BANCO DE DADOS
  # ============================================
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/crypto_monitor}
    driver-class-name: org.postgresql.Driver
    username: ${SPRING_DATASOURCE_USERNAME:crypto_user}
    password: ${SPRING_DATASOURCE_PASSWORD:qwe123}

    # ============================================
    # POOL HIKARI
    # ============================================
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: CryptoMonitorPool

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: false

  database-platform: org.hibernate.dialect.PostgreSQLDialect

  # ============================================
  # MIGRAÇÕES (FLYWAY)
  # ============================================
  flyway:
    enabled: true
    locations: classpath:db/migration
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/crypto_monitor}
    user: ${SPRING_DATASOURCE_USERNAME:crypto_user}
    password: ${SPRING_DATASOURCE_PASSWORD:qwe123}
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false

  # ============================================
  # CONFIGURAÇÃO DE JWT
  # ============================================
  jwt:
    secret: ${JWT_SECRET}  # ⚠️ OBRIGATÓRIO via .env
    expiration: 86400000   # 24 horas
    issuer: crypto-monitor

  # ============================================
  # CONFIGURAÇÃO DE EMAIL
  # ============================================
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:ddevnordeste@gmail.com}
    password: ${MAIL_PASSWORD:zubnnuqrgxjwuhth}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  # ============================================
  # TAREFAS AGENDADAS (DESABILITADAS)
  # ============================================
  task:
    scheduling:
      enabled: false

  # ============================================
  # SEGURANÇA ADICIONAL
  # ============================================
  main:
    banner-mode: off  # ✅ Desabilitar banner (evita info leak)

  mvc:
    throw-exception-if-no-handler-found: true  # ✅ Evitar stacktrace em produção
  web:
    resources:
      add-mappings: false

# ============================================
# CONFIGURAÇÕES ESPECÍFICAS DA APLICAÇÃO
# ============================================
crypto:
  coins: bitcoin,ethereum,cardano,polkadot,chainlink,solana,avalanche-2,polygon,litecoin,bitcoin-cash

# ============================================
# ALERTAS AUTOMÁTICOS
# ============================================
alert:
  buy:
    threshold: -1.0
  sell:
    threshold: 1.0
  check-interval: 300000

# ============================================
# NOTIFICAÇÕES
# ============================================
notification:
  email:
    enabled: true
    from-name: Crypto Monitoring System
    from: ${MAIL_USERNAME:ddevnordeste@gmail.com}
    cooldown-minutes: 30

  telegram:
    enabled: true
    bot-token: ${TELEGRAM_BOT_TOKEN:}
    chat-id: ${TELEGRAM_CHAT_ID:}

# ============================================
# SISTEMA DE MONITORAMENTO
# ============================================
monitoring:
  max-concurrent-users: 50
  thread-pool-size: 10
  shutdown-timeout: 60

# ============================================
# API COINGECKO
# ============================================
coingecko:
  api:
    url: https://api.coingecko.com/api/v3
  rate-limit: 30

# ============================================
# LOGS (ajustado para versão segura)
# ============================================
logging:
  level:
    com.crypto: INFO
    org.springframework.security: WARN  # ✅ Não logar detalhes de auth
    org.hibernate.SQL: ERROR            # ✅ Não logar queries com dados
    org.springframework.web: DEBUG
    org.springframework.mail: DEBUG
    org.flywaydb: DEBUG
    org.springframework.scheduling: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/crypto-monitor.log
    max-size: 10MB
    max-history: 7

# ============================================
# ACTUATOR (ajustado para segurança)
# ============================================
management:
  endpoints:
    web:
      exposure:
        include: health  # ✅ Apenas health
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized  # ✅ Detalhes apenas para autenticados
  health:
    mail:
      enabled: false
  info:
    env:
      enabled: true

# ============================================
# INFORMAÇÕES DA APLICAÇÃO
# ============================================
info:
  app:
    name: Crypto Monitor
    description: Sistema de Monitoramento de Criptomoedas com Controle por Usuário
    version: 2.0.0
    features:
      - Monitoramento controlado por usuário
      - Alertas personalizados por email
      - Sistema anti-spam de notificações
      - Suporte multi-usuário
  java:
    version: "17.0.16"
  build:
    timestamp: ${TIMESTAMP}

# ============================================
# CONFIGURAÇÃO DE SEGURANÇA (ADICIONADA)
# ============================================
app:
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:3001,http://localhost:8080"
    # Produção:
    # allowed-origins: "https://crypto-monitor.com,https://www.crypto-monitor.com"
  security:
    enabled: true

# ============================================
# JWT SEGURO (mantido/espelhado)
# ============================================
jwt:
  secret: ${JWT_SECRET}  # ⚠️ OBRIGATÓRIO via .env
  expiration: 86400000
  issuer: crypto-monitor
