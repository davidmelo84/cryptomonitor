{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVID\\\\Desktop\\\\cryptomonitor\\\\front\\\\crypto-monitor-frontend\\\\src\\\\components\\\\dashboard\\\\MultiCryptoChart.jsx\",\n  _s = $RefreshSig$();\n// front/crypto-monitor-frontend/src/components/dashboard/MultiCryptoChart.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { GitCompare } from 'lucide-react';\nimport { API_BASE_URL } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultiCryptoChart({\n  selectedCryptos\n}) {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [selectedPeriod, setSelectedPeriod] = useState(7);\n  const [loading, setLoading] = useState(false);\n  const colors = ['#667eea',\n  // Roxo\n  '#10b981',\n  // Verde\n  '#ef4444',\n  // Vermelho\n  '#f59e0b',\n  // Laranja\n  '#06b6d4',\n  // Ciano\n  '#ec4899' // Rosa\n  ];\n  const periods = [{\n    value: 1,\n    label: '24h'\n  }, {\n    value: 7,\n    label: '7d'\n  }, {\n    value: 30,\n    label: '30d'\n  }];\n  useEffect(() => {\n    if (selectedCryptos.length > 0) {\n      fetchAllData();\n    }\n  }, [selectedCryptos, selectedPeriod]);\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      // Buscar dados de todas as cryptos em paralelo\n      const promises = selectedCryptos.map(crypto => fetch(`${API_BASE_URL}/crypto/history/${crypto.coinId}?days=${selectedPeriod}`).then(res => res.json()).catch(() => null));\n      const results = await Promise.all(promises);\n\n      // Combinar dados\n      const combinedData = mergeCryptoData(results, selectedCryptos);\n      setChartData(combinedData);\n    } catch (error) {\n      console.error('Erro ao buscar dados:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const mergeCryptoData = (results, cryptos) => {\n    var _results$;\n    if (!results || results.length === 0) return [];\n\n    // Usar datas da primeira crypto como base\n    const baseData = ((_results$ = results[0]) === null || _results$ === void 0 ? void 0 : _results$.data) || [];\n    return baseData.map((point, index) => {\n      const dataPoint = {\n        date: point.date\n      };\n\n      // Adicionar preÃ§o de cada crypto\n      results.forEach((result, cryptoIndex) => {\n        if (result && result.data && result.data[index]) {\n          const cryptoSymbol = cryptos[cryptoIndex].symbol;\n          dataPoint[cryptoSymbol] = result.data[index].price;\n        }\n      });\n      return dataPoint;\n    });\n  };\n  const formatPrice = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      notation: 'compact',\n      minimumFractionDigits: 0\n    }).format(value);\n  };\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (!active || !payload || !payload.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-xl border-2 border-indigo-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-bold text-gray-800 mb-3\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between gap-4 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-semibold\",\n          style: {\n            color: entry.color\n          },\n          children: [entry.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-bold\",\n          children: formatPrice(entry.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n  if (selectedCryptos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-16 rounded-[20px] shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(GitCompare, {\n        size: 48,\n        className: \"mx-auto mb-4 text-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 text-lg\",\n        children: \"Selecione pelo menos 2 criptomoedas para comparar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-[20px] shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6 flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(GitCompare, {\n            size: 28,\n            color: \"#667eea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \"Compara\\xE7\\xE3o de Criptomoedas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm mt-2\",\n          children: [selectedCryptos.length, \" moeda(s) selecionada(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: periods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedPeriod(period.value),\n          className: `px-4 py-2 rounded-lg font-bold text-sm transition-all ${selectedPeriod === period.value ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n          children: period.label\n        }, period.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3 mb-6\",\n      children: selectedCryptos.map((crypto, index) => {\n        var _crypto$symbol;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-3 rounded-lg border-2\",\n          style: {\n            borderColor: colors[index % colors.length]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 rounded-full\",\n            style: {\n              backgroundColor: colors[index % colors.length]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-bold text-gray-800\",\n            children: (_crypto$symbol = crypto.symbol) === null || _crypto$symbol === void 0 ? void 0 : _crypto$symbol.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, crypto.coinId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Carregando compara\\xE7\\xE3o...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#f0f0f0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            },\n            tickFormatter: formatPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), selectedCryptos.map((crypto, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: crypto.symbol,\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: false,\n            name: crypto.name,\n            activeDot: {\n              r: 6\n            }\n          }, crypto.coinId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiCryptoChart, \"epPdFeqEj+JIS7Cl62JwGY5VPQE=\");\n_c = MultiCryptoChart;\nexport default MultiCryptoChart;\nvar _c;\n$RefreshReg$(_c, \"MultiCryptoChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","GitCompare","API_BASE_URL","jsxDEV","_jsxDEV","MultiCryptoChart","selectedCryptos","_s","chartData","setChartData","selectedPeriod","setSelectedPeriod","loading","setLoading","colors","periods","value","label","length","fetchAllData","promises","map","crypto","fetch","coinId","then","res","json","catch","results","Promise","all","combinedData","mergeCryptoData","error","console","cryptos","_results$","baseData","data","point","index","dataPoint","date","forEach","result","cryptoIndex","cryptoSymbol","symbol","price","formatPrice","Intl","NumberFormat","style","currency","notation","minimumFractionDigits","format","CustomTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entry","color","name","size","period","onClick","_crypto$symbol","borderColor","backgroundColor","toUpperCase","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","content","type","strokeWidth","dot","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/DAVID/Desktop/cryptomonitor/front/crypto-monitor-frontend/src/components/dashboard/MultiCryptoChart.jsx"],"sourcesContent":["// front/crypto-monitor-frontend/src/components/dashboard/MultiCryptoChart.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend\r\n} from 'recharts';\r\nimport { GitCompare } from 'lucide-react';\r\nimport { API_BASE_URL } from '../../utils/constants';\r\n\r\nfunction MultiCryptoChart({ selectedCryptos }) {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(7);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const colors = [\r\n    '#667eea', // Roxo\r\n    '#10b981', // Verde\r\n    '#ef4444', // Vermelho\r\n    '#f59e0b', // Laranja\r\n    '#06b6d4', // Ciano\r\n    '#ec4899'  // Rosa\r\n  ];\r\n\r\n  const periods = [\r\n    { value: 1, label: '24h' },\r\n    { value: 7, label: '7d' },\r\n    { value: 30, label: '30d' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (selectedCryptos.length > 0) {\r\n      fetchAllData();\r\n    }\r\n  }, [selectedCryptos, selectedPeriod]);\r\n\r\n  const fetchAllData = async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Buscar dados de todas as cryptos em paralelo\r\n      const promises = selectedCryptos.map(crypto =>\r\n        fetch(`${API_BASE_URL}/crypto/history/${crypto.coinId}?days=${selectedPeriod}`)\r\n          .then(res => res.json())\r\n          .catch(() => null)\r\n      );\r\n\r\n      const results = await Promise.all(promises);\r\n\r\n      // Combinar dados\r\n      const combinedData = mergeCryptoData(results, selectedCryptos);\r\n      setChartData(combinedData);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao buscar dados:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const mergeCryptoData = (results, cryptos) => {\r\n    if (!results || results.length === 0) return [];\r\n\r\n    // Usar datas da primeira crypto como base\r\n    const baseData = results[0]?.data || [];\r\n    \r\n    return baseData.map((point, index) => {\r\n      const dataPoint = { date: point.date };\r\n      \r\n      // Adicionar preÃ§o de cada crypto\r\n      results.forEach((result, cryptoIndex) => {\r\n        if (result && result.data && result.data[index]) {\r\n          const cryptoSymbol = cryptos[cryptoIndex].symbol;\r\n          dataPoint[cryptoSymbol] = result.data[index].price;\r\n        }\r\n      });\r\n      \r\n      return dataPoint;\r\n    });\r\n  };\r\n\r\n  const formatPrice = (value) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      notation: 'compact',\r\n      minimumFractionDigits: 0\r\n    }).format(value);\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (!active || !payload || !payload.length) return null;\r\n\r\n    return (\r\n      <div className=\"bg-white p-4 rounded-lg shadow-xl border-2 border-indigo-200\">\r\n        <p className=\"text-sm font-bold text-gray-800 mb-3\">{label}</p>\r\n        {payload.map((entry, index) => (\r\n          <div key={index} className=\"flex items-center justify-between gap-4 mb-1\">\r\n            <span className=\"text-sm font-semibold\" style={{ color: entry.color }}>\r\n              {entry.name}:\r\n            </span>\r\n            <span className=\"text-sm font-bold\">\r\n              {formatPrice(entry.value)}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (selectedCryptos.length === 0) {\r\n    return (\r\n      <div className=\"bg-white p-16 rounded-[20px] shadow-md text-center\">\r\n        <GitCompare size={48} className=\"mx-auto mb-4 text-gray-300\" />\r\n        <p className=\"text-gray-400 text-lg\">\r\n          Selecione pelo menos 2 criptomoedas para comparar\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-[20px] shadow-md\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6 flex-wrap gap-4\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-3\">\r\n            <GitCompare size={28} color=\"#667eea\" />\r\n            ComparaÃ§Ã£o de Criptomoedas\r\n          </h2>\r\n          <p className=\"text-gray-600 text-sm mt-2\">\r\n            {selectedCryptos.length} moeda(s) selecionada(s)\r\n          </p>\r\n        </div>\r\n\r\n        {/* Period Selector */}\r\n        <div className=\"flex gap-2\">\r\n          {periods.map((period) => (\r\n            <button\r\n              key={period.value}\r\n              onClick={() => setSelectedPeriod(period.value)}\r\n              className={`px-4 py-2 rounded-lg font-bold text-sm transition-all ${\r\n                selectedPeriod === period.value\r\n                  ? 'bg-indigo-500 text-white shadow-lg'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              {period.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Legend Cards */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3 mb-6\">\r\n        {selectedCryptos.map((crypto, index) => (\r\n          <div\r\n            key={crypto.coinId}\r\n            className=\"flex items-center gap-2 p-3 rounded-lg border-2\"\r\n            style={{ borderColor: colors[index % colors.length] }}\r\n          >\r\n            <div\r\n              className=\"w-3 h-3 rounded-full\"\r\n              style={{ backgroundColor: colors[index % colors.length] }}\r\n            />\r\n            <span className=\"text-sm font-bold text-gray-800\">\r\n              {crypto.symbol?.toUpperCase()}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      {loading ? (\r\n        <div className=\"flex items-center justify-center h-[400px]\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"></div>\r\n            <p className=\"text-gray-600\">Carregando comparaÃ§Ã£o...</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div style={{ width: '100%', height: '400px' }}>\r\n          <ResponsiveContainer>\r\n            <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n              <XAxis \r\n                dataKey=\"date\" \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n              />\r\n              <YAxis \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={formatPrice}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Legend />\r\n              \r\n              {selectedCryptos.map((crypto, index) => (\r\n                <Line\r\n                  key={crypto.coinId}\r\n                  type=\"monotone\"\r\n                  dataKey={crypto.symbol}\r\n                  stroke={colors[index % colors.length]}\r\n                  strokeWidth={3}\r\n                  dot={false}\r\n                  name={crypto.name}\r\n                  activeDot={{ r: 6 }}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiCryptoChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}