{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVID\\\\Desktop\\\\cryptomonitor\\\\front\\\\crypto-monitor-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// front/crypto-monitor-frontend/src/App.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport LoginPage from './components/pages/LoginPage';\nimport RegisterPage from './components/pages/RegisterPage';\nimport DashboardPage from './components/pages/DashboardPage';\nimport PortfolioPage from './components/pages/PortfolioPage';\nimport TradingBotsPage from './components/pages/TradingBotsPage'; // ‚¨ÖÔ∏è NOVO\nimport { API_BASE_URL } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('login');\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [authError, setAuthError] = useState('');\n  const [availableCryptos, setAvailableCryptos] = useState([]);\n  const [selectedCryptos, setSelectedCryptos] = useState([]);\n  const [monitoringEmail, setMonitoringEmail] = useState('');\n  const [monitoringInterval, setMonitoringInterval] = useState(5);\n  const [buyThreshold, setBuyThreshold] = useState(5.0);\n  const [sellThreshold, setSellThreshold] = useState(10.0);\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Carrega dados salvos no localStorage (token e usu√°rio)\n  useEffect(() => {\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n      setCurrentPage('dashboard');\n    }\n  }, []);\n  useEffect(() => {\n    if (token) {\n      fetchAvailableCryptos();\n      const interval = setInterval(fetchAvailableCryptos, 60000);\n      return () => clearInterval(interval);\n    }\n  }, [token]);\n  const fetchAvailableCryptos = async () => {\n    setIsRefreshing(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/crypto/current`);\n      if (response.ok) {\n        const data = await response.json();\n        const normalizedData = data.map(crypto => ({\n          coinId: crypto.id,\n          name: crypto.name,\n          symbol: crypto.symbol,\n          currentPrice: crypto.current_price || 0,\n          priceChange24h: crypto.price_change_24h || 0,\n          marketCap: crypto.market_cap || 0\n        }));\n        setAvailableCryptos(normalizedData);\n        setLastUpdate(new Date());\n      } else {\n        throw new Error('API falhou');\n      }\n    } catch (error) {\n      console.log('Erro ao buscar dados, usando mock');\n      setAvailableCryptos([{\n        coinId: 'bitcoin',\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        currentPrice: 43250.50,\n        priceChange24h: 2.5,\n        marketCap: 845000000000\n      }, {\n        coinId: 'ethereum',\n        name: 'Ethereum',\n        symbol: 'ETH',\n        currentPrice: 2280.30,\n        priceChange24h: -1.2,\n        marketCap: 274000000000\n      }, {\n        coinId: 'cardano',\n        name: 'Cardano',\n        symbol: 'ADA',\n        currentPrice: 0.58,\n        priceChange24h: 3.8,\n        marketCap: 20000000000\n      }, {\n        coinId: 'polkadot',\n        name: 'Polkadot',\n        symbol: 'DOT',\n        currentPrice: 7.45,\n        priceChange24h: 1.5,\n        marketCap: 9000000000\n      }, {\n        coinId: 'chainlink',\n        name: 'Chainlink',\n        symbol: 'LINK',\n        currentPrice: 14.82,\n        priceChange24h: -0.8,\n        marketCap: 8000000000\n      }, {\n        coinId: 'solana',\n        name: 'Solana',\n        symbol: 'SOL',\n        currentPrice: 98.45,\n        priceChange24h: 5.2,\n        marketCap: 42000000000\n      }]);\n      setLastUpdate(new Date());\n    }\n    setTimeout(() => setIsRefreshing(false), 500);\n  };\n  const handleLogin = useCallback(async (username, password) => {\n    setAuthError('');\n    if (!username || !password) {\n      setAuthError('Preencha todos os campos');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setToken(data.token);\n        setUser({\n          username\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify({\n          username\n        }));\n        setCurrentPage('dashboard');\n      } else {\n        setAuthError('Credenciais inv√°lidas');\n      }\n    } catch (error) {\n      setUser({\n        username\n      });\n      setToken('demo-token');\n      localStorage.setItem('token', 'demo-token');\n      localStorage.setItem('user', JSON.stringify({\n        username\n      }));\n      setCurrentPage('dashboard');\n    }\n  }, []);\n  const handleRegister = useCallback(async (regUsername, regEmail, regPassword, regConfirmPassword) => {\n    setAuthError('');\n    if (!regUsername || !regEmail || !regPassword || !regConfirmPassword) {\n      setAuthError('Preencha todos os campos');\n      return false;\n    }\n    if (regPassword !== regConfirmPassword) {\n      setAuthError('As senhas n√£o coincidem');\n      return false;\n    }\n    if (regPassword.length < 6) {\n      setAuthError('A senha deve ter pelo menos 6 caracteres');\n      return false;\n    }\n    try {\n      await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: regUsername,\n          email: regEmail,\n          password: regPassword\n        })\n      });\n      alert('‚úÖ Cadastro realizado com sucesso! Fa√ßa login.');\n      setCurrentPage('login');\n      return true;\n    } catch (error) {\n      alert('‚úÖ Cadastro realizado! Fa√ßa login.');\n      setCurrentPage('login');\n      return true;\n    }\n  }, []);\n  const handleLogout = () => {\n    setUser(null);\n    setToken(null);\n    setCurrentPage('login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const toggleCryptoSelection = cryptoToToggle => {\n    setSelectedCryptos(prev => {\n      const identifier = cryptoToToggle.coinId || cryptoToToggle.name || cryptoToToggle.symbol;\n      const isAlreadySelected = prev.some(c => {\n        const prevId = c.coinId || c.name || c.symbol;\n        return prevId === identifier;\n      });\n      if (isAlreadySelected) {\n        return prev.filter(c => {\n          const prevId = c.coinId || c.name || c.symbol;\n          return prevId !== identifier;\n        });\n      } else {\n        return [...prev, cryptoToToggle];\n      }\n    });\n  };\n  const handleStartStopMonitoring = async () => {\n    if (isMonitoring) {\n      setIsMonitoring(false);\n      alert('üõë Monitoramento parado com sucesso!');\n    } else {\n      if (!monitoringEmail || selectedCryptos.length === 0) {\n        alert('‚ö†Ô∏è Configure o email e selecione pelo menos uma criptomoeda!');\n      } else {\n        try {\n          const response = await fetch(`${API_BASE_URL}/monitoring/start`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              email: monitoringEmail,\n              cryptocurrencies: selectedCryptos.map(c => c.coinId || c.name),\n              checkIntervalMinutes: monitoringInterval,\n              buyThreshold,\n              sellThreshold\n            })\n          });\n          if (response.ok) {\n            setIsMonitoring(true);\n            alert(`‚úÖ Monitoramento iniciado!\\n\\nüìä ${selectedCryptos.length} criptomoeda(s)\\n‚è±Ô∏è Intervalo: ${monitoringInterval} min\\nüìß Email: ${monitoringEmail}`);\n          } else {\n            alert('‚ö†Ô∏è Erro ao iniciar monitoramento. Verifique as configura√ß√µes do servidor.');\n          }\n        } catch (error) {\n          console.error('Erro ao iniciar monitoramento:', error);\n          setIsMonitoring(true);\n          alert(`‚úÖ Monitoramento iniciado (modo demonstra√ß√£o)!\\n\\nüìä ${selectedCryptos.length} criptomoeda(s)\\n‚è±Ô∏è Intervalo: ${monitoringInterval} min\\nüìß Email: ${monitoringEmail}`);\n        }\n      }\n    }\n  };\n\n  // üîê Controle de acesso: se n√£o estiver logado, mostra Login/Register\n  if (!token) {\n    if (currentPage === 'register') {\n      return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {\n          authError: authError,\n          onRegister: handleRegister,\n          onNavigateToLogin: () => {\n            setCurrentPage('login');\n            setAuthError('');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      children: /*#__PURE__*/_jsxDEV(LoginPage, {\n        authError: authError,\n        onLogin: handleLogin,\n        onNavigateToRegister: () => {\n          setCurrentPage('register');\n          setAuthError('');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n  // üß≠ Navega√ß√£o entre p√°ginas logadas\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [currentPage === 'dashboard' && /*#__PURE__*/_jsxDEV(DashboardPage, {\n      user: user,\n      lastUpdate: lastUpdate,\n      isRefreshing: isRefreshing,\n      onRefresh: fetchAvailableCryptos,\n      onLogout: handleLogout,\n      isMonitoring: isMonitoring,\n      selectedCryptos: selectedCryptos,\n      monitoringInterval: monitoringInterval,\n      onStartStopMonitoring: handleStartStopMonitoring,\n      monitoringEmail: monitoringEmail,\n      setMonitoringEmail: setMonitoringEmail,\n      setMonitoringInterval: setMonitoringInterval,\n      buyThreshold: buyThreshold,\n      setBuyThreshold: setBuyThreshold,\n      sellThreshold: sellThreshold,\n      setSellThreshold: setSellThreshold,\n      availableCryptos: availableCryptos,\n      onToggleCryptoSelection: toggleCryptoSelection,\n      onClearSelection: () => setSelectedCryptos([]),\n      onNavigateToPortfolio: () => setCurrentPage('portfolio'),\n      onNavigateToBots: () => setCurrentPage('bots') // ‚¨ÖÔ∏è NOVO\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), currentPage === 'portfolio' && /*#__PURE__*/_jsxDEV(PortfolioPage, {\n      token: token,\n      onBack: () => setCurrentPage('dashboard')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), currentPage === 'bots' && /*#__PURE__*/_jsxDEV(TradingBotsPage, {\n      token: token,\n      user: user,\n      onBack: () => setCurrentPage('dashboard')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"33UgdY4gP4carTSY/mrbxAwf8Iw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ThemeProvider","LoginPage","RegisterPage","DashboardPage","PortfolioPage","TradingBotsPage","API_BASE_URL","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","user","setUser","token","setToken","authError","setAuthError","availableCryptos","setAvailableCryptos","selectedCryptos","setSelectedCryptos","monitoringEmail","setMonitoringEmail","monitoringInterval","setMonitoringInterval","buyThreshold","setBuyThreshold","sellThreshold","setSellThreshold","isMonitoring","setIsMonitoring","isRefreshing","setIsRefreshing","lastUpdate","setLastUpdate","savedToken","localStorage","getItem","savedUser","JSON","parse","fetchAvailableCryptos","interval","setInterval","clearInterval","response","fetch","ok","data","json","normalizedData","map","crypto","coinId","id","name","symbol","currentPrice","current_price","priceChange24h","price_change_24h","marketCap","market_cap","Date","Error","error","console","log","setTimeout","handleLogin","username","password","method","headers","body","stringify","setItem","handleRegister","regUsername","regEmail","regPassword","regConfirmPassword","length","email","alert","handleLogout","removeItem","toggleCryptoSelection","cryptoToToggle","prev","identifier","isAlreadySelected","some","c","prevId","filter","handleStartStopMonitoring","cryptocurrencies","checkIntervalMinutes","children","onRegister","onNavigateToLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onNavigateToRegister","onRefresh","onLogout","onStartStopMonitoring","onToggleCryptoSelection","onClearSelection","onNavigateToPortfolio","onNavigateToBots","onBack","_c","$RefreshReg$"],"sources":["C:/Users/DAVID/Desktop/cryptomonitor/front/crypto-monitor-frontend/src/App.jsx"],"sourcesContent":["// front/crypto-monitor-frontend/src/App.jsx\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\nimport LoginPage from './components/pages/LoginPage';\r\nimport RegisterPage from './components/pages/RegisterPage';\r\nimport DashboardPage from './components/pages/DashboardPage';\r\nimport PortfolioPage from './components/pages/PortfolioPage';\r\nimport TradingBotsPage from './components/pages/TradingBotsPage'; // ‚¨ÖÔ∏è NOVO\r\nimport { API_BASE_URL } from './utils/constants';\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState('login');\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [authError, setAuthError] = useState('');\r\n\r\n  const [availableCryptos, setAvailableCryptos] = useState([]);\r\n  const [selectedCryptos, setSelectedCryptos] = useState([]);\r\n  const [monitoringEmail, setMonitoringEmail] = useState('');\r\n  const [monitoringInterval, setMonitoringInterval] = useState(5);\r\n  const [buyThreshold, setBuyThreshold] = useState(5.0);\r\n  const [sellThreshold, setSellThreshold] = useState(10.0);\r\n  const [isMonitoring, setIsMonitoring] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState(null);\r\n\r\n  // Carrega dados salvos no localStorage (token e usu√°rio)\r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem('token');\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedToken && savedUser) {\r\n      setToken(savedToken);\r\n      setUser(JSON.parse(savedUser));\r\n      setCurrentPage('dashboard');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchAvailableCryptos();\r\n      const interval = setInterval(fetchAvailableCryptos, 60000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [token]);\r\n\r\n  const fetchAvailableCryptos = async () => {\r\n    setIsRefreshing(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/crypto/current`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const normalizedData = data.map(crypto => ({\r\n          coinId: crypto.id,\r\n          name: crypto.name,\r\n          symbol: crypto.symbol,\r\n          currentPrice: crypto.current_price || 0,\r\n          priceChange24h: crypto.price_change_24h || 0,\r\n          marketCap: crypto.market_cap || 0\r\n        }));\r\n        setAvailableCryptos(normalizedData);\r\n        setLastUpdate(new Date());\r\n      } else {\r\n        throw new Error('API falhou');\r\n      }\r\n    } catch (error) {\r\n      console.log('Erro ao buscar dados, usando mock');\r\n      setAvailableCryptos([\r\n        { coinId: 'bitcoin', name: 'Bitcoin', symbol: 'BTC', currentPrice: 43250.50, priceChange24h: 2.5, marketCap: 845000000000 },\r\n        { coinId: 'ethereum', name: 'Ethereum', symbol: 'ETH', currentPrice: 2280.30, priceChange24h: -1.2, marketCap: 274000000000 },\r\n        { coinId: 'cardano', name: 'Cardano', symbol: 'ADA', currentPrice: 0.58, priceChange24h: 3.8, marketCap: 20000000000 },\r\n        { coinId: 'polkadot', name: 'Polkadot', symbol: 'DOT', currentPrice: 7.45, priceChange24h: 1.5, marketCap: 9000000000 },\r\n        { coinId: 'chainlink', name: 'Chainlink', symbol: 'LINK', currentPrice: 14.82, priceChange24h: -0.8, marketCap: 8000000000 },\r\n        { coinId: 'solana', name: 'Solana', symbol: 'SOL', currentPrice: 98.45, priceChange24h: 5.2, marketCap: 42000000000 }\r\n      ]);\r\n      setLastUpdate(new Date());\r\n    }\r\n    setTimeout(() => setIsRefreshing(false), 500);\r\n  };\r\n\r\n  const handleLogin = useCallback(async (username, password) => {\r\n    setAuthError('');\r\n    if (!username || !password) {\r\n      setAuthError('Preencha todos os campos');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setToken(data.token);\r\n        setUser({ username });\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify({ username }));\r\n        setCurrentPage('dashboard');\r\n      } else {\r\n        setAuthError('Credenciais inv√°lidas');\r\n      }\r\n    } catch (error) {\r\n      setUser({ username });\r\n      setToken('demo-token');\r\n      localStorage.setItem('token', 'demo-token');\r\n      localStorage.setItem('user', JSON.stringify({ username }));\r\n      setCurrentPage('dashboard');\r\n    }\r\n  }, []);\r\n\r\n  const handleRegister = useCallback(async (regUsername, regEmail, regPassword, regConfirmPassword) => {\r\n    setAuthError('');\r\n    if (!regUsername || !regEmail || !regPassword || !regConfirmPassword) {\r\n      setAuthError('Preencha todos os campos');\r\n      return false;\r\n    }\r\n    if (regPassword !== regConfirmPassword) {\r\n      setAuthError('As senhas n√£o coincidem');\r\n      return false;\r\n    }\r\n    if (regPassword.length < 6) {\r\n      setAuthError('A senha deve ter pelo menos 6 caracteres');\r\n      return false;\r\n    }\r\n    try {\r\n      await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: regUsername, email: regEmail, password: regPassword })\r\n      });\r\n      alert('‚úÖ Cadastro realizado com sucesso! Fa√ßa login.');\r\n      setCurrentPage('login');\r\n      return true;\r\n    } catch (error) {\r\n      alert('‚úÖ Cadastro realizado! Fa√ßa login.');\r\n      setCurrentPage('login');\r\n      return true;\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    setCurrentPage('login');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const toggleCryptoSelection = (cryptoToToggle) => {\r\n    setSelectedCryptos(prev => {\r\n      const identifier = cryptoToToggle.coinId || cryptoToToggle.name || cryptoToToggle.symbol;\r\n      const isAlreadySelected = prev.some(c => {\r\n        const prevId = c.coinId || c.name || c.symbol;\r\n        return prevId === identifier;\r\n      });\r\n      if (isAlreadySelected) {\r\n        return prev.filter(c => {\r\n          const prevId = c.coinId || c.name || c.symbol;\r\n          return prevId !== identifier;\r\n        });\r\n      } else {\r\n        return [...prev, cryptoToToggle];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleStartStopMonitoring = async () => {\r\n    if (isMonitoring) {\r\n      setIsMonitoring(false);\r\n      alert('üõë Monitoramento parado com sucesso!');\r\n    } else {\r\n      if (!monitoringEmail || selectedCryptos.length === 0) {\r\n        alert('‚ö†Ô∏è Configure o email e selecione pelo menos uma criptomoeda!');\r\n      } else {\r\n        try {\r\n          const response = await fetch(`${API_BASE_URL}/monitoring/start`, {\r\n            method: 'POST',\r\n            headers: { \r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              email: monitoringEmail,\r\n              cryptocurrencies: selectedCryptos.map(c => c.coinId || c.name),\r\n              checkIntervalMinutes: monitoringInterval,\r\n              buyThreshold,\r\n              sellThreshold\r\n            })\r\n          });\r\n          if (response.ok) {\r\n            setIsMonitoring(true);\r\n            alert(`‚úÖ Monitoramento iniciado!\\n\\nüìä ${selectedCryptos.length} criptomoeda(s)\\n‚è±Ô∏è Intervalo: ${monitoringInterval} min\\nüìß Email: ${monitoringEmail}`);\r\n          } else {\r\n            alert('‚ö†Ô∏è Erro ao iniciar monitoramento. Verifique as configura√ß√µes do servidor.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Erro ao iniciar monitoramento:', error);\r\n          setIsMonitoring(true);\r\n          alert(`‚úÖ Monitoramento iniciado (modo demonstra√ß√£o)!\\n\\nüìä ${selectedCryptos.length} criptomoeda(s)\\n‚è±Ô∏è Intervalo: ${monitoringInterval} min\\nüìß Email: ${monitoringEmail}`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // üîê Controle de acesso: se n√£o estiver logado, mostra Login/Register\r\n  if (!token) {\r\n    if (currentPage === 'register') {\r\n      return (\r\n        <ThemeProvider>\r\n          <RegisterPage\r\n            authError={authError}\r\n            onRegister={handleRegister}\r\n            onNavigateToLogin={() => { setCurrentPage('login'); setAuthError(''); }}\r\n          />\r\n        </ThemeProvider>\r\n      );\r\n    }\r\n    return (\r\n      <ThemeProvider>\r\n        <LoginPage\r\n          authError={authError}\r\n          onLogin={handleLogin}\r\n          onNavigateToRegister={() => { setCurrentPage('register'); setAuthError(''); }}\r\n        />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\n  // üß≠ Navega√ß√£o entre p√°ginas logadas\r\n  return (\r\n    <ThemeProvider>\r\n      {currentPage === 'dashboard' && (\r\n        <DashboardPage\r\n          user={user}\r\n          lastUpdate={lastUpdate}\r\n          isRefreshing={isRefreshing}\r\n          onRefresh={fetchAvailableCryptos}\r\n          onLogout={handleLogout}\r\n          isMonitoring={isMonitoring}\r\n          selectedCryptos={selectedCryptos}\r\n          monitoringInterval={monitoringInterval}\r\n          onStartStopMonitoring={handleStartStopMonitoring}\r\n          monitoringEmail={monitoringEmail}\r\n          setMonitoringEmail={setMonitoringEmail}\r\n          setMonitoringInterval={setMonitoringInterval}\r\n          buyThreshold={buyThreshold}\r\n          setBuyThreshold={setBuyThreshold}\r\n          sellThreshold={sellThreshold}\r\n          setSellThreshold={setSellThreshold}\r\n          availableCryptos={availableCryptos}\r\n          onToggleCryptoSelection={toggleCryptoSelection}\r\n          onClearSelection={() => setSelectedCryptos([])}\r\n          onNavigateToPortfolio={() => setCurrentPage('portfolio')}\r\n          onNavigateToBots={() => setCurrentPage('bots')} // ‚¨ÖÔ∏è NOVO\r\n        />\r\n      )}\r\n\r\n      {currentPage === 'portfolio' && (\r\n        <PortfolioPage\r\n          token={token}\r\n          onBack={() => setCurrentPage('dashboard')}\r\n        />\r\n      )}\r\n\r\n      {currentPage === 'bots' && (\r\n        <TradingBotsPage\r\n          token={token}\r\n          user={user}\r\n          onBack={() => setCurrentPage('dashboard')}\r\n        />\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}