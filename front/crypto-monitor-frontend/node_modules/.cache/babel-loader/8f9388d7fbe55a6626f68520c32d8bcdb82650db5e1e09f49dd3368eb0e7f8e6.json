{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVID\\\\Desktop\\\\cryptomonitor\\\\front\\\\crypto-monitor-frontend\\\\src\\\\components\\\\dashboard\\\\PriceChart.jsx\",\n  _s = $RefreshSig$();\n// front/crypto-monitor-frontend/src/components/dashboard/PriceChart.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { TrendingUp, TrendingDown, Activity, BarChart2 } from 'lucide-react';\nimport { API_BASE_URL } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PriceChart({\n  coinId,\n  coinName,\n  coinSymbol\n}) {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [selectedPeriod, setSelectedPeriod] = useState(7);\n  const [chartType, setChartType] = useState('line');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const periods = [{\n    value: 1,\n    label: '24h'\n  }, {\n    value: 7,\n    label: '7d'\n  }, {\n    value: 30,\n    label: '30d'\n  }, {\n    value: 90,\n    label: '90d'\n  }, {\n    value: 365,\n    label: '1y'\n  }];\n  const generateMockData = useCallback(days => {\n    const data = [];\n    const now = Date.now();\n    const basePrice = 43000;\n    for (let i = days; i >= 0; i--) {\n      const date = new Date(now - i * 24 * 60 * 60 * 1000);\n      const randomChange = (Math.random() - 0.5) * 2000;\n      data.push({\n        date: date.toLocaleDateString('pt-BR'),\n        price: basePrice + randomChange,\n        volume: Math.random() * 1000000000\n      });\n    }\n    return data;\n  }, []);\n  const fetchChartData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/crypto/history/${coinId}?days=${selectedPeriod}`);\n      if (!response.ok) throw new Error('Falha ao buscar dados');\n      const data = await response.json();\n      setChartData(data.data);\n      setStats(data.stats);\n    } catch (err) {\n      console.error('Erro ao buscar histórico:', err);\n      setError(err.message);\n      // Mock data para demonstração\n      const mockData = generateMockData(selectedPeriod);\n      setChartData(mockData);\n      setStats({\n        min: 40000,\n        max: 45000,\n        current: 43250,\n        change: 2.5\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [coinId, selectedPeriod, generateMockData]);\n  useEffect(() => {\n    fetchChartData();\n  }, [fetchChartData]);\n  const formatPrice = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n  const formatVolume = value => {\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(2)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(2)}M`;\n    return `$${(value / 1e3).toFixed(2)}K`;\n  };\n  const CustomTooltip = ({\n    active,\n    payload\n  }) => {\n    if (!active || !payload || !payload.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-xl border-2 border-indigo-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-bold text-gray-800 mb-2\",\n        children: payload[0].payload.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-bold text-indigo-600 mb-1\",\n        children: formatPrice(payload[0].value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), payload[1] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-600\",\n        children: [\"Volume: \", formatVolume(payload[1].value)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-[20px] shadow-md flex items-center justify-center min-h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Activity, {\n          className: \"animate-spin mx-auto mb-4\",\n          size: 40,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Carregando gr\\xE1fico...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n  const isPositiveChange = (stats === null || stats === void 0 ? void 0 : stats.change) >= 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-[20px] shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start mb-6 flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 flex items-center gap-3 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(BarChart2, {\n            size: 28,\n            color: \"#667eea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), coinName, \" (\", coinSymbol === null || coinSymbol === void 0 ? void 0 : coinSymbol.toUpperCase(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4 flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-gray-800\",\n              children: formatPrice(stats.current)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center gap-2 px-4 py-2 rounded-lg ${isPositiveChange ? 'bg-green-100' : 'bg-red-100'}`,\n            children: [isPositiveChange ? /*#__PURE__*/_jsxDEV(TrendingUp, {\n              size: 20,\n              color: \"#10b981\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(TrendingDown, {\n              size: 20,\n              color: \"#ef4444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-bold ${isPositiveChange ? 'text-green-700' : 'text-red-700'}`,\n              children: [isPositiveChange ? '+' : '', stats.change.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600 text-sm\",\n              children: [\"(\", selectedPeriod, \"d)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: periods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedPeriod(period.value),\n            className: `px-4 py-2 rounded-lg font-bold text-sm transition-all ${selectedPeriod === period.value ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n            children: period.label\n          }, period.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setChartType('line'),\n            className: `px-4 py-2 rounded-lg font-bold text-sm transition-all ${chartType === 'line' ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n            children: \"Linha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setChartType('area'),\n            className: `px-4 py-2 rounded-lg font-bold text-sm transition-all ${chartType === 'area' ? 'bg-indigo-500 text-white shadow-lg' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`,\n            children: \"\\xC1rea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-700 font-semibold mb-1\",\n          children: \"M\\xEDnimo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold text-blue-900\",\n          children: formatPrice(stats.min)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-purple-700 font-semibold mb-1\",\n          children: \"M\\xE1ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold text-purple-900\",\n          children: formatPrice(stats.max)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-700 font-semibold mb-1\",\n          children: \"Varia\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold text-green-900\",\n          children: [isPositiveChange ? '+' : '', stats.change.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: chartType === 'line' ? /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#f0f0f0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            },\n            tickFormatter: value => {\n              if (selectedPeriod > 30) {\n                const parts = value.split('/');\n                return `${parts[0]}/${parts[1]}`;\n              }\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            },\n            tickFormatter: formatPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#667eea\",\n            strokeWidth: 3,\n            dot: false,\n            name: \"Pre\\xE7o\",\n            activeDot: {\n              r: 6\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n              id: \"colorPrice\",\n              x1: \"0\",\n              y1: \"0\",\n              x2: \"0\",\n              y2: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"5%\",\n                stopColor: \"#667eea\",\n                stopOpacity: 0.8\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"95%\",\n                stopColor: \"#667eea\",\n                stopOpacity: 0.1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#f0f0f0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#666\",\n            tick: {\n              fontSize: 12\n            },\n            tickFormatter: formatPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#667eea\",\n            strokeWidth: 3,\n            fillOpacity: 1,\n            fill: \"url(#colorPrice)\",\n            name: \"Pre\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-yellow-50 border-l-4 border-yellow-400 rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-700 text-sm\",\n        children: \"\\u26A0\\uFE0F Usando dados de demonstra\\xE7\\xE3o. Configure o backend para dados reais.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(PriceChart, \"+SL7a1s5UcPNPlTPRsar/kozJAg=\");\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","LineChart","Line","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","TrendingUp","TrendingDown","Activity","BarChart2","API_BASE_URL","jsxDEV","_jsxDEV","PriceChart","coinId","coinName","coinSymbol","_s","chartData","setChartData","stats","setStats","selectedPeriod","setSelectedPeriod","chartType","setChartType","loading","setLoading","error","setError","periods","value","label","generateMockData","days","data","now","Date","basePrice","i","date","randomChange","Math","random","push","toLocaleDateString","price","volume","fetchChartData","response","fetch","ok","Error","json","err","console","message","mockData","min","max","current","change","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatVolume","toFixed","CustomTooltip","active","payload","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","color","isPositiveChange","toUpperCase","map","period","onClick","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","parts","split","content","type","strokeWidth","dot","name","activeDot","r","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","fill","_c","$RefreshReg$"],"sources":["C:/Users/DAVID/Desktop/cryptomonitor/front/crypto-monitor-frontend/src/components/dashboard/PriceChart.jsx"],"sourcesContent":["// front/crypto-monitor-frontend/src/components/dashboard/PriceChart.jsx\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend\r\n} from 'recharts';\r\nimport { TrendingUp, TrendingDown, Activity, BarChart2 } from 'lucide-react';\r\nimport { API_BASE_URL } from '../../utils/constants';\r\n\r\nfunction PriceChart({ coinId, coinName, coinSymbol }) {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [stats, setStats] = useState(null);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(7);\r\n  const [chartType, setChartType] = useState('line');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const periods = [\r\n    { value: 1, label: '24h' },\r\n    { value: 7, label: '7d' },\r\n    { value: 30, label: '30d' },\r\n    { value: 90, label: '90d' },\r\n    { value: 365, label: '1y' }\r\n  ];\r\n\r\n  const generateMockData = useCallback((days) => {\r\n    const data = [];\r\n    const now = Date.now();\r\n    const basePrice = 43000;\r\n    \r\n    for (let i = days; i >= 0; i--) {\r\n      const date = new Date(now - i * 24 * 60 * 60 * 1000);\r\n      const randomChange = (Math.random() - 0.5) * 2000;\r\n      \r\n      data.push({\r\n        date: date.toLocaleDateString('pt-BR'),\r\n        price: basePrice + randomChange,\r\n        volume: Math.random() * 1000000000\r\n      });\r\n    }\r\n    \r\n    return data;\r\n  }, []);\r\n\r\n  const fetchChartData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/crypto/history/${coinId}?days=${selectedPeriod}`\r\n      );\r\n      \r\n      if (!response.ok) throw new Error('Falha ao buscar dados');\r\n      \r\n      const data = await response.json();\r\n      \r\n      setChartData(data.data);\r\n      setStats(data.stats);\r\n      \r\n    } catch (err) {\r\n      console.error('Erro ao buscar histórico:', err);\r\n      setError(err.message);\r\n      // Mock data para demonstração\r\n      const mockData = generateMockData(selectedPeriod);\r\n      setChartData(mockData);\r\n      setStats({\r\n        min: 40000,\r\n        max: 45000,\r\n        current: 43250,\r\n        change: 2.5\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [coinId, selectedPeriod, generateMockData]);\r\n\r\n  useEffect(() => {\r\n    fetchChartData();\r\n  }, [fetchChartData]);\r\n\r\n  const formatPrice = (value) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(value);\r\n  };\r\n\r\n  const formatVolume = (value) => {\r\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(2)}B`;\r\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(2)}M`;\r\n    return `$${(value / 1e3).toFixed(2)}K`;\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (!active || !payload || !payload.length) return null;\r\n\r\n    return (\r\n      <div className=\"bg-white p-4 rounded-lg shadow-xl border-2 border-indigo-200\">\r\n        <p className=\"text-sm font-bold text-gray-800 mb-2\">\r\n          {payload[0].payload.date}\r\n        </p>\r\n        <p className=\"text-lg font-bold text-indigo-600 mb-1\">\r\n          {formatPrice(payload[0].value)}\r\n        </p>\r\n        {payload[1] && (\r\n          <p className=\"text-xs text-gray-600\">\r\n            Volume: {formatVolume(payload[1].value)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white p-8 rounded-[20px] shadow-md flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"text-center\">\r\n          <Activity className=\"animate-spin mx-auto mb-4\" size={40} color=\"#667eea\" />\r\n          <p className=\"text-gray-600\">Carregando gráfico...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isPositiveChange = stats?.change >= 0;\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-[20px] shadow-md\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-start mb-6 flex-wrap gap-4\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-3 mb-2\">\r\n            <BarChart2 size={28} color=\"#667eea\" />\r\n            {coinName} ({coinSymbol?.toUpperCase()})\r\n          </h2>\r\n          \r\n          {stats && (\r\n            <div className=\"flex items-center gap-4 flex-wrap\">\r\n              <div>\r\n                <p className=\"text-3xl font-bold text-gray-800\">\r\n                  {formatPrice(stats.current)}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className={`flex items-center gap-2 px-4 py-2 rounded-lg ${\r\n                isPositiveChange ? 'bg-green-100' : 'bg-red-100'\r\n              }`}>\r\n                {isPositiveChange ? (\r\n                  <TrendingUp size={20} color=\"#10b981\" />\r\n                ) : (\r\n                  <TrendingDown size={20} color=\"#ef4444\" />\r\n                )}\r\n                <span className={`font-bold ${\r\n                  isPositiveChange ? 'text-green-700' : 'text-red-700'\r\n                }`}>\r\n                  {isPositiveChange ? '+' : ''}{stats.change.toFixed(2)}%\r\n                </span>\r\n                <span className=\"text-gray-600 text-sm\">\r\n                  ({selectedPeriod}d)\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"flex gap-3 flex-wrap\">\r\n          {/* Period Selector */}\r\n          <div className=\"flex gap-2\">\r\n            {periods.map((period) => (\r\n              <button\r\n                key={period.value}\r\n                onClick={() => setSelectedPeriod(period.value)}\r\n                className={`px-4 py-2 rounded-lg font-bold text-sm transition-all ${\r\n                  selectedPeriod === period.value\r\n                    ? 'bg-indigo-500 text-white shadow-lg'\r\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                }`}\r\n              >\r\n                {period.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Chart Type Selector */}\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              onClick={() => setChartType('line')}\r\n              className={`px-4 py-2 rounded-lg font-bold text-sm transition-all ${\r\n                chartType === 'line'\r\n                  ? 'bg-indigo-500 text-white shadow-lg'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Linha\r\n            </button>\r\n            <button\r\n              onClick={() => setChartType('area')}\r\n              className={`px-4 py-2 rounded-lg font-bold text-sm transition-all ${\r\n                chartType === 'area'\r\n                  ? 'bg-indigo-500 text-white shadow-lg'\r\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Área\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-3 gap-4 mb-6\">\r\n          <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-blue-700 font-semibold mb-1\">Mínimo</p>\r\n            <p className=\"text-xl font-bold text-blue-900\">\r\n              {formatPrice(stats.min)}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-purple-700 font-semibold mb-1\">Máximo</p>\r\n            <p className=\"text-xl font-bold text-purple-900\">\r\n              {formatPrice(stats.max)}\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg\">\r\n            <p className=\"text-sm text-green-700 font-semibold mb-1\">Variação</p>\r\n            <p className=\"text-xl font-bold text-green-900\">\r\n              {isPositiveChange ? '+' : ''}{stats.change.toFixed(2)}%\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Chart */}\r\n      <div style={{ width: '100%', height: '400px' }}>\r\n        <ResponsiveContainer>\r\n          {chartType === 'line' ? (\r\n            <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n              <XAxis \r\n                dataKey=\"date\" \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => {\r\n                  if (selectedPeriod > 30) {\r\n                    const parts = value.split('/');\r\n                    return `${parts[0]}/${parts[1]}`;\r\n                  }\r\n                  return value;\r\n                }}\r\n              />\r\n              <YAxis \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={formatPrice}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Legend />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"price\"\r\n                stroke=\"#667eea\"\r\n                strokeWidth={3}\r\n                dot={false}\r\n                name=\"Preço\"\r\n                activeDot={{ r: 6 }}\r\n              />\r\n            </LineChart>\r\n          ) : (\r\n            <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n              <defs>\r\n                <linearGradient id=\"colorPrice\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#667eea\" stopOpacity={0.8}/>\r\n                  <stop offset=\"95%\" stopColor=\"#667eea\" stopOpacity={0.1}/>\r\n                </linearGradient>\r\n              </defs>\r\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\r\n              <XAxis \r\n                dataKey=\"date\" \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n              />\r\n              <YAxis \r\n                stroke=\"#666\"\r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={formatPrice}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Legend />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"price\"\r\n                stroke=\"#667eea\"\r\n                strokeWidth={3}\r\n                fillOpacity={1}\r\n                fill=\"url(#colorPrice)\"\r\n                name=\"Preço\"\r\n              />\r\n            </AreaChart>\r\n          )}\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mt-4 p-4 bg-yellow-50 border-l-4 border-yellow-400 rounded\">\r\n          <p className=\"text-yellow-700 text-sm\">\r\n            ⚠️ Usando dados de demonstração. Configure o backend para dados reais.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}